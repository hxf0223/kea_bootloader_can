//===========================================================================
//文件名称：can.h
//功能概要：can底层驱动构件头文件
//版权所有：苏州大学飞思卡尔嵌入式中心(sumcu.suda.edu.cn)
//版本更新：2015-5-11  V1.5
//芯片类型：KEA128
//===========================================================================

#ifndef CAN_H       //防止重复定义（can_H  开头)
#define CAN_H

#include <stdint.h>
#include "can_common.h"
#include "common.h"

#define LOOP_MODE     0
#define NORMAL_MODE   1

//定义CAN通信的帧结构
typedef struct CanMsg
{
    uint_32 m_ID;      //msg发送方ID
    uint_8 m_IDE;      //扩展帧为1，标准帧为0
    uint_8 m_RTR;      //远程帧为1，数据帧为0
    uint_8 m_data[8];  //帧数据
    uint_8 m_dataLen;  //帧数据长度
    uint_8 m_priority; //发送优先级
} CANMsg;

//===========================================================================
//函数名称：CAN_Init
//功能概要：初始化MSCAN模块，采用24MHz总线时钟作为模块时钟，波特率固定为500Kbps
//参数说明：mode:工作模式选择:
//        LOOP_MODE(0)   - 回环模式
//        NORMAL_MODE(1) - 普通模式
//        open_filter:接收过滤器开关
//          1 - 开启过滤器，只接收标识符ID为acc_id的帧
//          0 - 关闭过滤器，接收所有帧
//        acc_id:接受ID，接收过滤器只接收标识符符合此ID的帧，过滤其他ID的帧
//函数返回：无
//===========================================================================
void mscan_init(uint_8 mode,uint_8 open_filter,uint_32 acc_id, can_baud_rate_e baudRate);

//===========================================================================
//函数名称：CAN_Fill_STD_Msg
//功能概要：填充一个CAN数据包
//参数说明：message:待发送CAN数据包结构体的首地址
//        id:待发送CAN标准帧的标识符ID（当前节点ID）
//        data:待发送数据缓冲区首地址
//        len:待发送数据长度（<=8 Bytes）
//函数返回：0 - 填充成功
//        1 - 数据长度输入错误
//===========================================================================
uint_8 CAN_Fill_STD_Msg(CANMsg *message,uint_32 id,uint_8 *data,uint_8 len);

//===========================================================================
//函数名称：CAN_Send_Msg
//功能概要：CAN发送数据包函数
//参数说明：sendmsg:所发送的CAN数据包的首地址
//函数返回：0 - 发送成功
//        1 - 数据帧长度错误
//        2 - 发送帧为扩展帧
//===========================================================================
uint_8 CAN_Send_Msg(CANMsg *sendmsg);

//===========================================================================
//函数名称：CAN_Receive_Msg
//功能概要：接收CAN数据包函数
//参数说明：receiveFrame:存放待接收CAN数据包缓冲区的首地址
//函数返回：0 - 成功接收标准帧
//        1 - 未接收到帧
//        2 - 收到扩展帧
//===========================================================================
uint_8 CAN_Receive_Msg(CANMsg *recvmsg);

#endif     //防止重复定义（CAN_H  结尾)

//===========================================================================
//声明：
//（1）我们开发的源代码，在本中心提供的硬件系统测试通过，真诚奉献给社会，不足之处，欢迎指正。
//（2）对于使用非本中心硬件系统的用户，移植代码时，请仔细根据自己的硬件匹配。
//
//苏州大学飞思卡尔嵌入式中心
//技术咨询：0512-65214835  http://sumcu.suda.edu.cn
